package core;

import static java.lang.System.out;

import java.util.ArrayList;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import java.util.Scanner;

public class class_laba_6 {
	
	// 3 
	public static String return_two_char_on_center(String s)
	{
		String s_2 = "";
		int sered = (int)(s.length() - 1) / 2;
		s_2 += s.charAt(sered);
		// Если не четная и там 1 символ в середине
		if (s.length() % 2 == 0)
		{
			s_2 += s.charAt(sered+1);
		}
		return s_2;
	}
	
	// 7
	public static void print_Java_X(String str)
	{	
		String pStr = "Java\\s+\\d{1,2}";
		Pattern p = Pattern.compile(pStr);
		Matcher m = p.matcher(str);
		while (m.find())
		{
			System.out.println(m.group());
		}
	}
	
	// 9 
	public static int count_eng_word(String str)
	{
		int flag = 0;
		String[] arr_str = str.split(" "); // Разбил по пробелам
		for(int i = 0; i < arr_str.length; i++)
		{
			if (arr_str[i].matches("[a-zA-z]+")) // Соответствие на eng буквы
			{
				flag++;
			}
		}
		return flag;
	}
	
	// 10.1
	public static boolean isPalindrome(int x) 
	{
		char[] s = Integer.toString(x).toCharArray();
		for (int i = 0, i_end = s.length - 1; i < (int)(s.length-1) / 2; i++, i_end--)
		{
			if (s[i] != s[i_end])
			{
				return false;
			}
		}
		return true;
		
	}
	
	// 10.2
	public static ArrayList<Integer> findPalindromes(String x) // поиск чисел
	{
		String[] words = x.split(" ");
		ArrayList<Integer> palindromes = new ArrayList<Integer>(); // тупо массив
		for(int i = 0; i < words.length; i++)
		{
			if (words[i].matches("[0-9]+")) // проверка на регулярку ( + это от 1 и больше элементов того что слева)
			{
				int x_znach = Integer.parseInt(words[i].trim()); // Получение самого числа 
				if (isPalindrome(x_znach)) // проверка его на палиндром
				{
					palindromes.add(x_znach);
				}
			}
		}
		return palindromes;
	}
	
	public static void main(String[] args) {

		// Консольный ввод import java.util.Scanner;
		Scanner in = new Scanner(System.in);
		
		// а 
		System.out.println("\nTask 1");
		//System.out.println("Введите строку: (Считает с первого пробела)"); /// ЧТОБЫ КАЖДЫЙ РАЗ НЕ ВВОДИТЬ
		//String str = in.nextLine();
		
		/*
		// б
		System.out.println(str.charAt(str.length()-1));
		
		// в 
		System.out.println(str.endsWith("!!!") ? true:false);
		
		// г
		System.out.println(str.startsWith("I like") ? true : false);
	
		// д
		System.out.println(str.contains("Java") ? true : false);
		*/
		
		// e
		String str = "I love Java!";
		System.out.println(str.indexOf("Java")); // I love Java! -- 7
		
		// ж
		//System.out.println(str.replace('a', 'o'));
		
		
		// 2
		System.out.println("\nTask 2");
		
		// Исходная строка
		String str2 = "Object-oriented programming is a programming language model organized around objects rather than \"actions\" and data rather than logic. Object-oriented programming blabla. Object-oriented programming bla.";
		
		/*
		 *
		 "Object-oriented programming is
		  a programming language model organized around objects rather than "actions"
	      and data rather than logic. OOP blabla. Object-oriented programming bla."
		
		String[] arr_str2 = str2.split(".");
		for	(int i = 0; i < arr_str2.length; i++) // Начинаю с 1 т.к там будет первое вхождение
		{
			System.out.println(arr_str2[i]);
		}
		str2 = "";
		for	(int i = 1; i < arr_str2.length; i++) // Начинаю с 1 т.к там будет первое вхождение
		{
			if(i % 2 != 0)
			{
				arr_str2[i] = arr_str2[i].replace("Object-oriented programming", "OOP");
			}
			str2 += arr_str2[i];
		}
		*/
		
		System.out.println(str2.replaceFirst(" Object-oriented programming"," OOP"));
		
		
		// 3
		System.out.println("\nTask 3");
		String str_1 = "string";
		String str_2 = "code";
		String str_3 = "Practice";
		
		System.out.println(return_two_char_on_center(str_1));
		System.out.println(return_two_char_on_center(str_2));
		System.out.println(return_two_char_on_center(str_3));
			
		// 4
		System.out.println("\nTask 4");
		String name = "Matvey";
		int mark = 10;
		String predmet = "Java";
		System.out.println(String.format("Студент %15s получил %3d по %10s", name, mark, predmet));
		
		// 5
		System.out.println("\nTask 5");
		Person_for_5_task p1 = new Person_for_5_task(); // Там по дефолту указал значения для теста
		System.out.println(p1); // Сработает метод toString()
		
		// 6
		System.out.println("\nTask 6");
		Employee_for_6_task[] emp1 = new Employee_for_6_task[] { new Employee_for_6_task("fullname1",557.10), new Employee_for_6_task("fullname2",725.20), new Employee_for_6_task("fullname3",345.56)}; // Заполнил
		Report_for_6_task.generateReport(emp1);	
		
		// 7
		System.out.println("\nTask 7");
		String str7 = "Versions: Java 5, _Java X, Java 6, Java 7, Java 8, Java 12.";
		print_Java_X(str7);
		
		// 8
		System.out.println("\nTask 8");
		
		// 9
		System.out.println("\nTask 9");
		String str9 = "One two three раз два три one1 two2 123 ";
		System.out.println("Кол-во только eng слов: " + count_eng_word(str9));
		
		// 10
		System.out.println("\nTask 10");
		String str10 = "asdfasd a 123321 sdfa 1551 dsf 3436 234asdfasdfasdf";
		for ( int i : findPalindromes(str10))
			System.out.println(i);
		
	}
}
